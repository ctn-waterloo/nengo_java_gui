Communication Channel
============================
*Purpose*: This demo shows how to construct a simple communication channel.

*Comments*: A communication channel attempts to take the information from one population and put it in the next one.  The 'transformation' is thus the identity :math:`f(x)=x`.

Notably, this is the simplest 'neural circuit' in the demos.  This is because the connection from the first to second population is only connection weights that are applied to postsynaptic currents (PSCs) generated by incoming spikes.

*Usage*: Grab the slider control and move it up and down to see the effects of increasing or decreasing input. Both populations should reflect the input, but note that the second population only gets input from the first population through synaptic connections.

*Output*: See the screen capture below

.. image:: images/communication.png

*Code*::

    import nef
    
    net=nef.Network('Communications Channel')
    input=net.make_input('input',[0.5])
    A=net.make('A',100,1,quick=True)
    B=net.make('B',100,1,quick=True,storage_code='B')
    net.connect(input,A)
    net.connect(A,B)
    net.add_to(world)
